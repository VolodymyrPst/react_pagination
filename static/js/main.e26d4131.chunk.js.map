{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","useState","selectedPage","setSelectedPage","countPagination","Math","ceil","countMassive","firstPage","className","id","classNames","disabled","href","onClick","event","map","number","active","items","App","valueItem","setValueItem","length","value","onChange","target","htmlFor","pageNow","currentTarget","parentElement","prev","handleMove","slice","ReactDOM","render","document","getElementById"],"mappings":"mMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,CACR,C,WCGYG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,EAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAkBC,KAAKC,KAAKT,EAAQC,GACpCS,EAAejB,EAAW,EAAGc,GAC7BI,EAA6B,IAAjBN,EAElB,OACE,qBAAIO,UAAU,aAAd,UACE,oBACEC,GAAG,OACHD,UAAWE,IACT,YAAa,CAAEC,SAAUJ,IAH7B,SAME,mBACE,UAAQ,WACRC,UAAU,YACVI,KAAK,QACL,gBAAeL,EACfM,QAAS,SAACC,GACRf,EAAae,GACbZ,EAAgBJ,EAAc,EAC/B,EARH,oBAaDQ,EAAaS,KAAI,SAACC,GAAD,OAChB,oBAEEP,GAAE,UAAKO,GACPR,UAAWE,IAAW,YAAa,CACjCO,OAAQD,IAAWlB,IAJvB,SAOE,mBACE,UAAQ,WACRU,UAAU,YACVI,KAAI,WAAMI,GACVH,QAAS,SAACC,GACRf,EAAae,GACbZ,EAAgBc,EACjB,EAPH,SASGA,KAfEA,EAFS,IAqBlB,oBACEP,GAAG,OACHD,UAAWE,IACT,YAAa,CAAEC,SAAUV,IAAiBE,IAH9C,SAME,mBACE,UAAQ,WACRK,UAAU,YACVI,KAAK,QACL,gBAAed,IAAgBK,EAC/BU,QAAS,SAACC,GACRf,EAAae,GACbZ,EAAgBJ,EAAc,EAC/B,EARH,sBAeP,EChFKoB,G,MAAQ7B,EAAW,EAAG,IAAI0B,KAAI,SAACtB,GAAD,OAClC,oBAAI,UAAQ,OAAZ,wBAAoCA,IAAZA,EADU,KAIvB0B,EAAgB,WAC3B,MAAkCnB,mBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAAwCrB,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMN,EAAQsB,EAAMI,OAuCpB,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,uBACsCmB,EADtC,eACsDxB,EADtD,OAIA,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRC,GAAG,kBACHc,MAAK,UAAKH,GACVZ,UAAU,eACVgB,SApDW,SAACV,GACpBO,GAAcP,EAAMW,OAAOF,OAC3BrB,EAAgB,EACjB,EA4CO,UAOE,wBAAQqB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkBlB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASuB,EACTtB,YAAaG,EACbF,aArDe,SACnBe,GACI,IAAD,EACGa,GAAU,UAAAb,EAAMc,cAAcC,qBAApB,eAAmCpB,KAAM,GAEzD,OAAQkB,GACN,IAAK,OAjBPzB,GAAgB,SAAC4B,GAAD,OAAUA,EAAO,CAAjB,IAmBZ,MAEF,IAAK,OAjBP5B,GAAgB,SAAC4B,GAAD,OAAUA,EAAO,CAAjB,IAmBZ,MAEF,SAlBe,SAACH,GAClBzB,GAAiByB,EAClB,CAiBKI,CAAWJ,GAGhB,IAqCG,6BACGT,EAAMc,MACLZ,EAAYnB,EAAemB,EAC3BA,EAAYnB,OAKrB,EC3FDgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.e26d4131.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: React.MouseEventHandler<HTMLAnchorElement>;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const [selectedPage, setSelectedPage] = useState(currentPage);\n  const countPagination = Math.ceil(total / perPage);\n  const countMassive = getNumbers(1, countPagination);\n  const firstPage = selectedPage === 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        id=\"prev\"\n        className={classNames(\n          'page-item', { disabled: firstPage },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={(event) => {\n            onPageChange(event);\n            setSelectedPage(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {countMassive.map((number) => (\n        <li\n          key={number}\n          id={`${number}`}\n          className={classNames('page-item', {\n            active: number === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={(event) => {\n              onPageChange(event);\n              setSelectedPage(number);\n            }}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li\n        id=\"next\"\n        className={classNames(\n          'page-item', { disabled: selectedPage === countPagination },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === countPagination}\n          onClick={(event) => {\n            onPageChange(event);\n            setSelectedPage(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\nconst items = getNumbers(1, 42).map((n) => (\n  <li data-cy=\"item\" key={n}>{`Item ${n}`}</li>\n));\n\nexport const App: React.FC = () => {\n  const [valueItem, setValueItem] = useState(3);\n  const [selectedPage, setSelectedPage] = useState(1);\n  const total = items.length;\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setValueItem(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  const handleLeft = () => {\n    setSelectedPage((prev) => prev - 1);\n  };\n\n  const handleRight = () => {\n    setSelectedPage((prev) => prev + 1);\n  };\n\n  const handleMove = (pageNow: string) => {\n    setSelectedPage(+pageNow);\n  };\n\n  const onPageChange = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    const pageNow = event.currentTarget.parentElement?.id || '';\n\n    switch (pageNow) {\n      case 'prev':\n        handleLeft();\n        break;\n\n      case 'next':\n        handleRight();\n        break;\n\n      default:\n        handleMove(pageNow);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items 1 - ${valueItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={`${valueItem}`}\n            className=\"form-control\"\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={valueItem}\n        currentPage={selectedPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {items.slice(\n          valueItem * selectedPage - valueItem,\n          valueItem * selectedPage,\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}